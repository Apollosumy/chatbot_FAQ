services:
  web:
    build: .
    env_file: ./.env
    working_dir: /app/chatbot_project/backend
    command: >
      sh -c 'python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             exec gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --access-logfile - --error-logfile - --log-level info'
    volumes:
      - ./:/app
      - staticfiles:/app/chatbot_project/backend/staticfiles
      - media:/app/media
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  bot:
    build: .
    env_file: ./.env
    working_dir: /app/chatbot_project
    command: python -u bot/bot.py
    depends_on:
      - web
    restart: unless-stopped
    environment:
      DJANGO_API_URL: "http://web:8000/api"   # внутрішній URL (без TLS)

  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    restart: unless-stopped

  nginx:
    image: nginx:1.25
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
      - staticfiles:/app/chatbot_project/backend/staticfiles:ro
      - media:/app/media:ro
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh
    command: -c "sleep infinity"

volumes:
  certbot-webroot:
  letsencrypt:
  pgdata:
  staticfiles:
  media:
